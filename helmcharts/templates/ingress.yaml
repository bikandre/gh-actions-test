# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: default
#   name: app-ingress
#   labels:
#     app: app-ingress
#   annotations:
#     # Ingress type
#     # (OLD INGRESS CLASS NOTATION - STILL WORKS BUT RECOMMENDED TO USE IngressClass Resource)
#     kubernetes.io/ingress.class: "alb" 
#     # Load Balancer Name
#     alb.ingress.kubernetes.io/load-balancer-name: apps-aws-alb-ingress
#     # Ingress Core Settings
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Health Check Settings
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
#     # alb.ingress.kubernetes.io/healthcheck-port: '80'
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     alb.ingress.kubernetes.io/healthcheck-path: /index.html    
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'

# spec:
#   # ingressClassName: aws-elb-ingress-class # Ingress Class
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: webapp-service
#             port:
#               number: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: default
#   name: app-ingress-check
#   labels:
#     app: app-ingress-hceck
#   annotations:
#     # Ingress type
#     # (OLD INGRESS CLASS NOTATION - STILL WORKS BUT RECOMMENDED TO USE IngressClass Resource)
#     kubernetes.io/ingress.class: "alb" 
#     # Load Balancer Name
#     alb.ingress.kubernetes.io/load-balancer-name: apps-aws-alb-ingress-2
#     # Ingress Core Settings
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Health Check Settings
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
#     # alb.ingress.kubernetes.io/healthcheck-port: '80'
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     alb.ingress.kubernetes.io/healthcheck-path: /index.html    
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'

# spec:
#   # ingressClassName: aws-elb-ingress-class # Ingress Class
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: apache-webapp-service
#             port:
#               number: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: default
#   name: app-ingress-check1
#   labels:
#     app: app-ingress-check1
#   annotations:
#     # Ingress type
#     # (OLD INGRESS CLASS NOTATION - STILL WORKS BUT RECOMMENDED TO USE IngressClass Resource)
#     kubernetes.io/ingress.class: "alb" 
#     # Load Balancer Name
#     alb.ingress.kubernetes.io/load-balancer-name: app-ingress-check1
#     # Ingress Core Settings
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Health Check Settings
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
#     # alb.ingress.kubernetes.io/healthcheck-port: '80'
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     alb.ingress.kubernetes.io/healthcheck-path: /index.html    
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'

# spec:
#   # ingressClassName: aws-elb-ingress-class # Ingress Class
#   rules:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: react-app-service
#             port:
#               number: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   namespace: default
#   name: app-ingress-check2
#   labels:
#     app: app-ingress-check2
#   annotations:
#     # Ingress type
#     # (OLD INGRESS CLASS NOTATION - STILL WORKS BUT RECOMMENDED TO USE IngressClass Resource)
#     kubernetes.io/ingress.class: "alb" 
#     # Load Balancer Name
#     alb.ingress.kubernetes.io/load-balancer-name: app-ingress-check2
#     # Ingress Core Settings
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # Health Check Settings
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
#     # alb.ingress.kubernetes.io/healthcheck-port: '80'
#     alb.ingress.kubernetes.io/healthcheck-port: traffic-port
#     alb.ingress.kubernetes.io/healthcheck-path: /index.html    
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
#     alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
#     alb.ingress.kubernetes.io/success-codes: '200'
#     alb.ingress.kubernetes.io/healthy-threshold-count: '2'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'

# spec:
#   # ingressClassName: aws-elb-ingress-class # Ingress Class
#   rules:
#   - http:
#       paths:
#       - path: /api/data
#         pathType: Prefix
#         backend:
#           service:
#             name: backend-api-service
#             port:
#               number: 5000

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: default
  name: app-ingress
  labels:
    app: app-ingress
  annotations:
    kubernetes.io/ingress.class: "alb" 
    alb.ingress.kubernetes.io/load-balancer-name: ssl-ingress
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /index.html
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/ssl-redirect: 'true'
    #alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:135581164469:certificate/b6b180d7-4c65-4d4f-bcb7-0b898d4754e0
spec:
  rules:
    - http:
        paths:
          - path: /webapp
            pathType: Prefix
            backend:
              service:
                name: webapp-service
                port:
                  number: 80
          - path: /webappb
            pathType: Prefix
            backend:
              service:
                name: apache-webapp-service
                port:
                  number: 80
          - path: /react-app
            pathType: Prefix
            backend:
              service:
                name: react-app-service
                port:
                  number: 80
          - path: /backend-api
            pathType: Prefix
            backend:
              service:
                name: backend-api-service
                port:
                  number: 5000

